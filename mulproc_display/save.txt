d_func2(void *arg) {
    while(!endSignal) {
        sleep(1);
//        char buf[128] = {'\0'};
//        char cpu[5];
//        long int user,nice,sys,idle,iowait,irq,softirq;
//
//        FILE * fp = fopen("/proc/stat","r");
//        fgets(buf,sizeof(buf),fp);
//        sscanf(buf,"%s%ld%ld%ld%ld%ld%ld%ld",cpu,&user,&nice,&sys,&idle,&iowait,&irq,&softirq);
//
//        all1 = user+nice+sys+idle+iowait+irq+softirq;
//        idle1 = idle;
//        fclose(fp);
//        sleep(1);
        gdk_threads_enter();
        gtk_label_set_text(GTK_LABEL(content), get_cpu_usager(all1, all2, idle1, idle2));
        gdk_threads_leave();
    }
    return NULL;
}
